name: Build Docker image

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('backend/pyproject.toml', 'frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./build.Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/webbitmq:latest,${{ secrets.DOCKERHUB_USERNAME }}/webbitmq:${{ github.sha }}
        cache-from: |
          type=local,src=/tmp/.buildx-cache
          type=registry,ref=ghcr.io/astral-sh/uv:python3.12-bookworm-slim
          type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/webbitmq:latest
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    # Move cache to prevent growing cache size
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
